// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux (in=load, sel=address[2], a=DM0, b=DM1);
    DMux (in=DM0, sel=address[1], a=DM00, b=DM01);
    DMux (in=DM1, sel=address[1], a=DM10, b=DM11);
    DMux (in=DM00, sel=address[0], a=DM000, b=DM001);
    DMux (in=DM01, sel=address[0], a=DM010, b=DM011);
    DMux (in=DM10, sel=address[0], a=DM100, b=DM101);
    DMux (in=DM11, sel=address[0], a=DM110, b=DM111);

    Register (in=in, load=DM000, out=out000);
    Register (in=in, load=DM001, out=out001);
    Register (in=in, load=DM010, out=out010);
    Register (in=in, load=DM011, out=out011);
    Register (in=in, load=DM100, out=out100);
    Register (in=in, load=DM101, out=out101);
    Register (in=in, load=DM110, out=out110);
    Register (in=in, load=DM111, out=out111);

    Mux16 (a=out000, b=out001, sel=address[0], out=out00);
    Mux16 (a=out010, b=out011, sel=address[0], out=out01);
    Mux16 (a=out100, b=out101, sel=address[0], out=out10);
    Mux16 (a=out110, b=out111, sel=address[0], out=out11);
    Mux16 (a=out00, b=out01, sel=address[1], out=out0);
    Mux16 (a=out10, b=out11, sel=address[1], out=out1);
    Mux16 (a=out0, b=out1, sel=address[2], out=out);
}
