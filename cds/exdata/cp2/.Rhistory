}
for(obs in 1:nrow(filled_na)) {
print(filled_na[obs,])
}
for(obs in 1:nrow(filled_na)) {
print(filled_na[obs, steps])
}
for(obs in 1:nrow(filled_na)) {
print(filled_na[obs, 1])
}
filled_na <- raw
for(obs in 1:nrow(filled_na)) {
if(is.na(filled_na[obs, 1]) {
print(1)
}
}
filled_na <- raw
for(obs in 1:nrow(filled_na)) {
if(is.na(filled_na[obs, 1])) {
print(1)
}
}
filled_na <- raw
for(obs in 1:nrow(filled_na)) {
if(is.na(filled_na[obs, 1])) {
print(filled_na[obs,])
print(filled_na[obs, 3])
}
}
means1
means1[2315]
means1$2315
means1[[2315]]
means1[[1]]
names(means1)
class(means1)
means1
class(means1)
names(means1)
?array
dim(means1)
str(means1)
getElement(means1, 2315)
getElement(means1, 1)
means1$2315
means1[2315, 1]
dim(means1)
rownames(means1)
means1[rownames(means1)==2315]
x <- means1[rownames(means1)==2315]
as.numeric(x)
filled_na <- raw
for(obs in 1:nrow(filled_na)) {
if(is.na(filled_na[obs, 1])) {
print(filled_na[obs,])
print(filled_na[obs, 3])
print(as.numeric(means1[rownames(means1)==2315]))
}
}
means1
filled_na <- raw
for(obs in 1:nrow(filled_na)) {
if(is.na(filled_na[obs, 1])) {
print(filled_na[obs,])
print(filled_na[obs, 3])
print(as.numeric(means1[rownames(means1)==filled_na[obs, 3]]))
}
}
filled_na <- raw
for(obs in 1:nrow(filled_na)) {
if(is.na(filled_na[obs, 1])) {
print(filled_na[obs,])
print(filled_na[obs, 3])
print(as.numeric(means1[rownames(means1)==filled_na[obs, 3]]))
filled_na[obs, 3] <- as.numeric(means1[rownames(means1)==filled_na[obs, 3]])
}
}
tail(filled_na)
filled_na <- raw
for(obs in 1:nrow(filled_na)) {
if(is.na(filled_na[obs, 1])) {
print(filled_na[obs,])
print(filled_na[obs, 3])
print(as.numeric(means1[rownames(means1)==filled_na[obs, 3]]))
filled_na[obs, 1] <- as.numeric(means1[rownames(means1)==filled_na[obs, 3]])
}
}
for(obs in 1:nrow(filled_na)) {
if(is.na(filled_na[obs, 1])) {
print(filled_na[obs,])
print(filled_na[obs, 3])
print(as.numeric(means1[rownames(means1)==filled_na[obs, 3]]))
filled_na[obs, 1] <- as.numeric(means1[rownames(means1)==filled_na[obs, 3]])
}
}
tail(filled_na)
setwd("C:/Chris/cds/repdata/RepData_PeerAssessment1")
raw <- read.csv("activity/activity.csv")
```
## What is the mean total number of steps taken per day?
First a subset of the data, which will not contain the NAs, has to be created.
```{r}
no_na <- raw[!is.na(raw$steps),]
```
Next plot the histogram and calculate the means.
```{r}
sums1 <- tapply(no_na$steps, no_na$date, sum)
hist(sums1, breaks = 10, main = "", xlab = "avg. steps per day")
mean(sums1, na.rm = T)
median(sums1, na.rm = T)
means1 <- tapply(no_na$steps, no_na$interval, mean)
plot(x = names(means1), y = means1, type = "l", xlab = "interval",
ylab = "avg. steps")
which(means1==max(means1))
nrow(raw[is.na(raw$steps),])
filled_na <- raw
for(obs in 1:nrow(filled_na)) {
if(is.na(filled_na[obs, 1])) {
print(filled_na[obs,])
print(filled_na[obs, 3])
print(as.numeric(means1[rownames(means1)==filled_na[obs, 3]]))
filled_na[obs, 1] <- as.numeric(means1[rownames(means1)==filled_na[obs, 3]])
}
}
sums2 <- tapply(filled_na$steps, filled_na$date, sum)
hist(sums2, breaks = 10, main = "", xlab = "avg. steps per day")
mean(sums2, na.rm = T)
median(sums2, na.rm = T)
sums1
sums2
weekdays(filled_na$date)
?as.date
?date
?as.Date
as.Date(filled_na$date, format = "%Y-%m-%d")
weekdays(as.Date(filled_na$date, format = "%Y-%m-%d"))
hist(weekdays(as.Date(filled_na$date, format = "%Y-%m-%d")))
filled_na$day_type <- weekdays(as.Date(filled_na$date, format = "%Y-%m-%d"))
filled_na
filled_na <- raw
for(obs in 1:nrow(filled_na)) {
if(is.na(filled_na[obs, 1])) {
filled_na[obs, 1] <- as.numeric(means1[rownames(means1)==filled_na[obs, 3]])
}
}
```
Afterwards create another histograms and calculate the mean/median for this new
dataset again.
```{r}
sums2 <- tapply(filled_na$steps, filled_na$date, sum)
hist(sums2, breaks = 10, main = "", xlab = "avg. steps per day")
mean(sums2, na.rm = T)
median(sums2, na.rm = T)
```
filled_na2 <- filled_na
filled_na2$day_type <- weekdays(as.Date(filled_na$date, format = "%Y-%m-%d"))
head(filled_na2)
for(obs in 1:nrow(filled_na2)) {
if(filled_na2[obs, 4] == "Sunday" | filled_na2[obs, 4] == "Saturday") {
print(filled_na2[obs, 4])
}
}
for(obs in 1:nrow(filled_na2)) {
if(filled_na2[obs, 4] == "Sunday" | filled_na2[obs, 4] == "Saturday") {
print(filled_na2[obs, 4])
filled_na2[obs, 4] <- "weekend"
}
if(filled_na2[obs, 4] == "Monday" | filled_na2[obs, 4] == "Tuesday" |
filled_na2[obs, 4] == "Wednesday" | filled_na2[obs, 4] == "Thursday" |
filled_na2[obs, 4] == "Friday") {
print(filled_na2[obs, 4])
filled_na2[obs, 4] <- "weekday"
}
}
dim(filled_na$day_type)
str(filled_na$day_type)
head(filled_na)
str(filled_na2$day_type)
dim(filled_na2$day_type)
summary(filled_na)
summary(filled_na2)
as.factor
?as.factor
as.factor(filled_na2$day_type)
summary(filled_na2)
weekday <- filled_na2[filled_na2$day_type == "weekday",]
means_weekday <- tapply(weekday$steps, weekday$interval, mean)
plot(x = names(means_weekday), y = weekday, type = "l", xlab = "interval",
ylab = "avg. steps")
plot(x = names(means_weekday), y = means_weekday, type = "l", xlab = "interval",
ylab = "avg. steps")
weekend <- filled_na2[filled_na2$day_type == "weekend",]
means_weekend <- tapply(weekend$steps, weekend$interval, mean)
plot(x = names(means_weekend), y = means_weekend, type = "l", xlab = "interval",
ylab = "avg. steps")
par(mfrow = c(1,2))
weekday <- filled_na2[filled_na2$day_type == "weekday",]
means_weekday <- tapply(weekday$steps, weekday$interval, mean)
plot(x = names(means_weekday), y = means_weekday, type = "l", xlab = "interval",
ylab = "avg. steps")
weekend <- filled_na2[filled_na2$day_type == "weekend",]
means_weekend <- tapply(weekend$steps, weekend$interval, mean)
plot(x = names(means_weekend), y = means_weekend, type = "l", xlab = "interval",
ylab = "avg. steps")
par(mfrow = c(2,1))
weekday <- filled_na2[filled_na2$day_type == "weekday",]
means_weekday <- tapply(weekday$steps, weekday$interval, mean)
plot(x = names(means_weekday), y = means_weekday, type = "l", xlab = "interval",
ylab = "avg. steps")
weekend <- filled_na2[filled_na2$day_type == "weekend",]
means_weekend <- tapply(weekend$steps, weekend$interval, mean)
plot(x = names(means_weekend), y = means_weekend, type = "l", xlab = "interval",
ylab = "avg. steps")
par(mfrow = c(2,1), mar = c(2,2,1,1))
weekday <- filled_na2[filled_na2$day_type == "weekday",]
means_weekday <- tapply(weekday$steps, weekday$interval, mean)
plot(x = names(means_weekday), y = means_weekday, type = "l", xlab = "interval",
ylab = "avg. steps")
weekend <- filled_na2[filled_na2$day_type == "weekend",]
means_weekend <- tapply(weekend$steps, weekend$interval, mean)
plot(x = names(means_weekend), y = means_weekend, type = "l", xlab = "interval",
ylab = "avg. steps")
par(mfrow = c(2,1), mar = c(3,3,1,1))
weekday <- filled_na2[filled_na2$day_type == "weekday",]
means_weekday <- tapply(weekday$steps, weekday$interval, mean)
plot(x = names(means_weekday), y = means_weekday, type = "l", xlab = "interval",
ylab = "avg. steps")
weekend <- filled_na2[filled_na2$day_type == "weekend",]
means_weekend <- tapply(weekend$steps, weekend$interval, mean)
plot(x = names(means_weekend), y = means_weekend, type = "l", xlab = "interval",
ylab = "avg. steps")
par(mfrow = c(2,1), mar = c(4,4,1,1))
weekday <- filled_na2[filled_na2$day_type == "weekday",]
means_weekday <- tapply(weekday$steps, weekday$interval, mean)
plot(x = names(means_weekday), y = means_weekday, type = "l", xlab = "interval",
ylab = "avg. steps")
weekend <- filled_na2[filled_na2$day_type == "weekend",]
means_weekend <- tapply(weekend$steps, weekend$interval, mean)
plot(x = names(means_weekend), y = means_weekend, type = "l", xlab = "interval",
ylab = "avg. steps")
```
par(mfrow = c(2,1), mar = c(4,4,0,1))
weekday <- filled_na2[filled_na2$day_type == "weekday",]
means_weekday <- tapply(weekday$steps, weekday$interval, mean)
plot(x = names(means_weekday), y = means_weekday, type = "l", xlab = "interval",
ylab = "avg. steps")
weekend <- filled_na2[filled_na2$day_type == "weekend",]
means_weekend <- tapply(weekend$steps, weekend$interval, mean)
plot(x = names(means_weekend), y = means_weekend, type = "l", xlab = "interval",
ylab = "avg. steps")
```
firstDay
?firstDay
setwd("C:/Chris/Zalora/size_matters")
?matrix
sc <- matrix(data = c("S", "M", "L", "XL", 3, 5, 3, 1), nrow = 4, ncol = 2)
sc
hist(sc)
sc1 <- c(rep("S", 3))
sc1
sc1 <- c(rep("S", 3), rep("M", 4), rep("L", 3), rep("XL", 1))
sc1
hist(sc1)
?hist
plot(sc)
plot(sc1)
plot(table(sc1))
table(sc1)
class(table(sc1))
sc1 <- table(c(rep("S", 3), rep("M", 4), rep("L", 3), rep("XL", 1)))
hist(sc1)
hist(sc1)
hist(sc1, breaks = 4)
?hist
?data.frame
sc2 <- data.frame(row.names = c("size", "qty"))
sc2
names)sc2
names(sc2)
sc2$size <- c("S", "M", "L", "XL")
cbind(c("S", "M", "L", "XL"), c(3, 4, 3, 1))
sc3 <- cbind(c("S", "M", "L", "XL"), c(3, 4, 3, 1))
class(sc3)
as.data.frame(sc3)
sc3 <- as.data.frame(sc3)
class(sc3)
hist(sc3)
?barplot
barplot(sc3$V2)
barplot(sc3)
sc1_f <- as.factor(sc1)
hist(sc1, breaks = 4)
hist(sc1_f, breaks = 4)
hist(table(sc1_f), breaks = 4)
head(pollution)
setwd("C:/Chris/cds/exdata/week1")
### One Dimensional Summary Techniques
pollution <- read.csv("avgpm25.csv", colClasses = c("numeric", "character",
"factor", "numeric", "numeric"))
head(pollution)
hist(pollution$pm25, col = "green", breaks = 50)
barplot(table(pollution$region), col = "wheat",
main = "No. of Counties in Each Region")
barplot(table(sc1_f))
barplot(table(sc1))
table(sc1)
sc1
barplot(sc1)
sc1 <- table(c(rep("S", 3), rep("M", 4), rep("L", 3), rep("XL", 1)))
barplot(sc1)
setwd("C:/Chris/Zalora/size_matters")
setwd("C:/Chris/Zalora/size_matters")
sc1 <- table(c(rep("S", 3), rep("M", 4), rep("L", 3), rep("XL", 1)))
barplot(sc1)
?barplot
sc1
class(sc1)
?table
c(rep("S", 3), rep("M", 4), rep("L", 3), rep("XL", 1))
sc1[,]
sc1[,1]
?as.data.frame
sc2 <- as.data.frame(sc1)
sc2
barplot(sc2)
barplot(sc2$Freq)
?barplot
barplot(sc2$Freq, names.arg = sc2$Var1)
sc2 <- sc2[, c(3, 2, 1, 4)]
sc2 <- sc2[c(3, 2, 1, 4),]
barplot(sc2$Freq, names.arg = sc2$Var1)
sc1 <- as.data.frame(table(c(rep("S", 3), rep("M", 4), rep("L", 3), rep("XL", 1))))
sc1 <- sc1[c(3, 2, 1, 4),]
barplot(sc1$Freq, names.arg = sc1$Var1)
library(RPostgreSQL)
install.packages("RPostgreSQL")
library(RPostgreSQL)
?RPostgreSQL
?RPostgreSQL
?dbConnect
?PostgreSQL
?dbDriver
drv <- dbConnect("PostgreSQL")
pg <- PostgreSQL()
pg <- PostgreSQL()
pg
drv
drv <- dbConnect("PostgreSQL")
drv <- dbDriver("PostgreSQL")
pg
drv
?read.csv
cred <- read.csv("C:/Chris/Zalora/cred/cred.csv")
setwd("C:/Chris/Zalora/size_matters")
cred <- read.csv("C:/Chris/Zalora/cred/cred.csv")
drv <- dbDriver("PostgreSQL")
cred <- read.csv("C:/Chris/Zalora/cred/cred.csv")
cred <- read.csv("C:/Chris/Zalora/cred/rdscat.csv")
cred
cred <- read.csv("C:/Chris/Zalora/cred/rdscat.csv")
cred
user <- cred[1,2]
user
user <- as.character(cred[1,1])
user
pwd <- as.character(cred[1,2])
cred <- read.csv("C:/Chris/Zalora/cred/rdscat.csv")
user <- as.character(cred[1,1])
pwd <- as.character(cred[1,2])
con <- dbConnect(drv, host = "rdscat.zalora.com", port = 5432,
dbname = "buying", user = user, password = pwd)
con
dbGetQuery(con, "select 1")
dbGetQuery(con, "select * from ds_aggregated.hlt limit 100")
dbDisconnect(con)
dbListTables
dbListTables(con)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host = "rdscat.zalora.com", port = 5432,
dbname = "buying", user = user, password = pwd)
dbListTables(con)
dbDisconnect(con)
cred_red <- read.csv("C:/Chris/Zalora/cred/redcat.csv")
cred_rds <- read.csv("C:/Chris/Zalora/cred/rdscat.csv")
cred_red <- read.csv("C:/Chris/Zalora/cred/redcat.csv")
user_red <- as.character(cred_rds[1,1])
pwd_rds <- as.character(cred_rds[1,2])
# load credentials
cred_rds <- read.csv("C:/Chris/Zalora/cred/rdscat.csv")
user_rds <- as.character(cred_rds[1,1])
pwd_rds <- as.character(cred_rds[1,2])
cred_red <- read.csv("C:/Chris/Zalora/cred/redcat.csv")
user_red <- as.character(cred_rds[1,1])
pwd_rds <- as.character(cred_rds[1,2])
cred_red <- read.csv("C:/Chris/Zalora/cred/redcat.csv")
user_red <- as.character(cred_red[1,1])
pwd_red <- as.character(cred_red[1,2])
cred_rds <- read.csv("C:/Chris/Zalora/cred/rdscat.csv")
user_rds <- as.character(cred_rds[1,1])
pwd_rds <- as.character(cred_rds[1,2])
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host = "redcat.zalora.com", port = 5439,
dbname = "redcat", user = user_red, password = pwd_red)
drv_red <- dbDriver("PostgreSQL")
con_red <- dbConnect(drv, host = "redcat.zalora.com", port = 5439,
dbname = "redcat", user = user_red, password = pwd_red)
# load credentials
cred_red <- read.csv("C:/Chris/Zalora/cred/redcat.csv")
user_red <- as.character(cred_red[1,1])
pwd_red <- as.character(cred_red[1,2])
drv_red <- dbDriver("PostgreSQL")
con_red <- dbConnect(drv, host = "redcat.zalora.com", port = 5439,
dbname = "redcat", user = user_red, password = pwd_red)
dbListTables(con_red)
dbListTables(con_red)
drv_red <- dbDriver("PostgreSQL")
con_red <- dbConnect(drv, host = "redcat.zalora.com", port = 5439,
dbname = "redcat", user = user_red, password = pwd_red)
con_red <- dbConnect(drv_red, host = "redcat.zalora.com", port = 5439,
dbname = "redcat", user = user_red, password = pwd_red)
dbListTables(con_red)
dbDisconnect(con_red)
dbDisconnect(con_red)
setwd("C:/Chris/Zalora/size_matters")
setwd("C:/Chris/Zalora/size_matters")
dbGetQuery(con_red, "select * from ds_aggregated.hlt limit 100")
drv_red <- dbDriver("PostgreSQL")
con_red <- dbConnect(drv_red, host = "redcat.zalora.com", port = 5439,
dbname = "redcat", user = user_red, password = pwd_red)
dbGetQuery(con_red, "select * from ds_aggregated.hlt limit 100")
dbDisconnect(con_red)
dbGetQuery(con_red, "select * from bob_live_sg.catalog_attribute_option_shoes_sizesystembrand")
con_red <- dbConnect(drv_red, host = "redcat.zalora.com", port = 5439,
dbname = "redcat", user = user_red, password = pwd_red)
dbGetQuery(con_red, "select * from bob_live_sg.catalog_attribute_option_shoes_sizesystembrand")
ssb <- dbGetQuery(con_red, "select * from bob_live_sg.catalog_attribute_option_shoes_sizesystembrand")
sho_ssb <- dbGetQuery(con_red, "select * from bob_live_sg.catalog_attribute_option_shoes_sizesystembrand")
sho_sizes <- dbGetQuery(con_red, "select * from bob_live_sg.catalog_attribute_option_shoes_size")
dbDisconnect(con_red)
soe_sizes
sho_sizes
sho_ssb
setwd("C:/Chris/cds/exdata/cp2")
nei <- readRDS("summarySCC_PM25.rds")
nei <- readRDS("summarySCC_PM25.rds")
scc <- readRDS("Source_Classification_Code.rds")
?tapply
sums_y <- tapply(nei$Emissions, nei$year, sum)
sums_y
hist(sums_y)
barplot(sums_y)
sums2 <- sums_y/1000
sums2
?round
round(sums2)
sums2 <- round(sums_y/1000)
sums_y_k <- round(sums_y/1000)
barplot(sums_y_k)
barplot(sums_y_k, main = "Emissions of PM2.5 in thousand tons")
png(filename = "plot1.png", width = 480, height = 480)
barplot(sums_y_k, main = "Emissions of PM2.5 in thousand tons")
dev.off()
balt <- nei[fips == "24510", ]
balt <- nei[nei$fips == "24510", ]
balt
sums_b_y <- tapply(balt$Emissions, balt$year, sum)
barplot(sums_b_y, main = "Emissions of PM2.5 in thousand tons")
barplot(sums_b_y, main = "Emissions of PM2.5 in Baltimore")
barplot(sums_b_y, main = "Emissions of PM2.5 in tons in Baltimore")
png(filename = "plot2.png", width = 480, height = 480)
barplot(sums_b_y, main = "Emissions of PM2.5 in tons in Baltimore")
dev.off()
str(nei$Point)
dim(nei$Point)
dim(nei$type)
str(nei$type)
summary(nei$type)
summary(nei)
nei$type <- as.factor(nei$type)
summary(nei$type)
p <- nei[nei$type == "POINT", ]
np <- nei[nei$type == "NONPOINT", ]
r <- nei[nei$type == "ON-ROAD", ]
nr <- nei[nei$type == "NON-ROAD", ]
sums_p <- tapply(p$Emissions, p$year, sum)
sums_p
sums_np <- tapply(np$Emissions, np$year, sum)
sums_r <- tapply(r$Emissions, r$year, sum)
sums_nr <- tapply(nr$Emissions, nr$year, sum)
str(mpg)
library(ggplot2)
qplot(p)
?qplot
qplot(Emissions, year, data = p)
qplot(Emissions, year, data = p)
?geom
?qplot
qplot(Emissions, year, data = p, geom = "bar")
qplot(year, Emissions, data = p, geom = "bar")
?geom_bar
g <- ggplot(nei, aes(year, Emissions))
summary(g)
g <- g + geom_bar()
summary(g)
print(g)
?geom_bar
g <- g + geom_bar(stat = "bin")
print(g)
print(g)
?geom_bar
g <- g + geom_bar(stat = "identity")
print(g)
